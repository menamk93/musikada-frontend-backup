openapi: 3.0.2
info:
  title: Simple Blog API Built with FastAPI and Tortoise-ORM
  version: 0.1.0
paths:
  /:
    get:
      summary: Root
      operationId: root__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /register:
    post:
      summary: Create User
      operationId: create_user_register_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserIn'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOut'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /user/{user_id}:
    delete:
      summary: Delete User
      operationId: delete_user_user__user_id__delete
      parameters:
        - required: true
          schema:
            title: User Id
            type: integer
          name: user_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPNotFoundError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearerCookie: []
  /login:
    post:
      summary: Login
      operationId: login_login_post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Body_login_login_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /posts:
    get:
      summary: Get Posts
      operationId: get_posts_posts_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Posts Posts Get
                type: array
                items:
                  $ref: '#/components/schemas/Post'
      security:
        - OAuth2PasswordBearerCookie: []
  /post:
    post:
      summary: Create Post
      operationId: create_post_post_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostIn'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearerCookie: []
components:
  schemas:
    Body_login_login_post:
      title: Body_login_login_post
      required:
        - username
        - password
      type: object
      properties:
        grant_type:
          title: Grant Type
          pattern: password
          type: string
        username:
          title: Username
          type: string
        password:
          title: Password
          type: string
        scope:
          title: Scope
          type: string
          default: ''
        client_id:
          title: Client Id
          type: string
        client_secret:
          title: Client Secret
          type: string
    HTTPNotFoundError:
      title: HTTPNotFoundError
      required:
        - detail
      type: object
      properties:
        detail:
          title: Detail
          type: string
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    Post:
      title: Post
      required:
        - id
        - title
        - write_up
        - author
        - created_at
      type: object
      properties:
        id:
          title: Id
          maximum: 2147483647
          minimum: 1
          type: integer
        title:
          title: Title
          maxLength: 225
          type: string
        write_up:
          title: Write Up
          type: string
        author:
          title: Author
          allOf:
            - $ref: '#/components/schemas/src.models.models.Users.leaf'
        created_at:
          title: Created At
          type: string
          format: date-time
          readOnly: true
      additionalProperties: false
      description: The Post model
    PostIn:
      title: PostIn
      required:
        - title
        - write_up
      type: object
      properties:
        title:
          title: Title
          maxLength: 225
          type: string
        write_up:
          title: Write Up
          type: string
      additionalProperties: false
      description: The Post model
    Status:
      title: Status
      required:
        - message
      type: object
      properties:
        message:
          title: Message
          type: string
    UserIn:
      title: UserIn
      required:
        - username
      type: object
      properties:
        username:
          title: Username
          maxLength: 20
          type: string
          description: This is a username
        full_name:
          title: Full Name
          maxLength: 50
          type: string
          nullable: true
        password:
          title: Password
          maxLength: 128
          type: string
          nullable: true
      additionalProperties: false
      description: The User model
    UserOut:
      title: UserOut
      required:
        - id
        - username
        - created_at
        - post
      type: object
      properties:
        id:
          title: Id
          maximum: 2147483647
          minimum: 1
          type: integer
        username:
          title: Username
          maxLength: 20
          type: string
          description: This is a username
        full_name:
          title: Full Name
          maxLength: 50
          type: string
          nullable: true
        created_at:
          title: Created At
          type: string
          format: date-time
          readOnly: true
        post:
          title: Post
          type: array
          items:
            $ref: '#/components/schemas/src.models.models.Posts.leaf'
      additionalProperties: false
      description: The User model
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            type: string
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
    src.models.models.Posts.leaf:
      title: Posts
      required:
        - id
        - title
        - write_up
        - created_at
        - modified_at
      type: object
      properties:
        id:
          title: Id
          maximum: 2147483647
          minimum: 1
          type: integer
        title:
          title: Title
          maxLength: 225
          type: string
        write_up:
          title: Write Up
          type: string
        created_at:
          title: Created At
          type: string
          format: date-time
          readOnly: true
        modified_at:
          title: Modified At
          type: string
          format: date-time
          readOnly: true
      additionalProperties: false
      description: The Post model
    src.models.models.Users.leaf:
      title: Users
      required:
        - id
        - username
      type: object
      properties:
        id:
          title: Id
          maximum: 2147483647
          minimum: 1
          type: integer
        username:
          title: Username
          maxLength: 20
          type: string
          description: This is a username
        full_name:
          title: Full Name
          maxLength: 50
          type: string
          nullable: true
      additionalProperties: false
      description: The User model
  securitySchemes:
    OAuth2PasswordBearerCookie:
      type: oauth2
      flows:
        password:
          scopes: {}
          tokenUrl: /login
